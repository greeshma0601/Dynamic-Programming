/*Count ways to N'th Stair(Order does not matter)
There are N stairs, and a person standing at the bottom wants to reach the top. The person can climb either 1 stair or 2 stairs at a time. Count the number of ways, the person can reach the top (order does not matter).
Note: Order does not matter means for n=4 {1 2 1},{2 1 1},{1 1 2} are considered same.

Input:
The first line contains an integer 'T' denoting the total number of test cases. In each test cases, an integer N will be given.

Output:
For each testcase, in a new line, print number of possible ways to reach Nth stair.

Constraints:
1 <= T <= 1000
1 <= N <= 105

Example:
Input:
1
4
Output:
3*/

#include<bits/stdc++.h>
#include<iostream>
using namespace std;
int main()
 {
 int t;
 cin>>t;
 while(t--)
 {
 int n;
 cin>>n;
 cout<<(n/2)+1<<endl;
 }
	//code
	return 0;
}

/*
#include <iostream>
#include<math.h>
using namespace std;
long long int m=pow(10,9)+7;
int main() {
	//code
	int t;cin>>t;
	long long int arr[100000];
	    arr[0]=1;arr[1]=1;
	    for(int i=2;i<=100000;i++)
	    {
	        arr[i]=(arr[i-1]%m+arr[i-2]%m)%m;
	    }
	while(t--)
	{
	    int n;cin>>n;
	    cout<<arr[n]<<"\n";
	}
	return 0;
}

*/
